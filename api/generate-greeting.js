export default async function handler(req, res) {
  // Enable CORS
  res.setHeader('Access-Control-Allow-Credentials', true);
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
  res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { name, relationship, customDetails, selectedStyle } = req.body;

    console.log('Received request:', { name, relationship, customDetails, selectedStyle });
    console.log('API Key exists:', !!process.env.GEMINI_API_KEY);

    if (!name) {
      return res.status(400).json({ error: 'Name is required' });
    }

    const prompt = `Generate a warm, festive Diwali greeting in ${selectedStyle} style for ${name}, who is my ${relationship}. ${customDetails ? `Additional context: ${customDetails}` : ''}. The greeting should be between 2-4 sentences, cheerful, and appropriate for the Diwali festival.`;

    console.log('Sending prompt to Gemini API...');

    const apiResponse = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=${process.env.GEMINI_API_KEY}`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          contents: [
            {
              role: "user",
              parts: [{ text: prompt }]
            }
          ]
        })
      }
    );

    console.log('Gemini API response status:', apiResponse.status);

    if (!apiResponse.ok) {
      const errorText = await apiResponse.text();
      console.error('Gemini API error:', errorText);
      throw new Error(`API error: ${apiResponse.status} - ${errorText}`);
    }

    const data = await apiResponse.json();
    console.log('Gemini API response data:', JSON.stringify(data).substring(0, 500));

    const greeting = data?.candidates?.[0]?.content?.parts?.[0]?.text?.trim();

    if (!greeting) {
      throw new Error('No greeting generated by API');
    }

    console.log('Generated greeting:', greeting);
    
    res.status(200).json({ 
      success: true,
      greeting 
    });

  } catch (error) {
    console.error('Error in generate-greeting API:', error);
    
    // Fallback greetings
    const fallbackGreetings = [
      `Wishing ${req.body?.name || 'you'} and your loved ones a Diwali filled with joy, prosperity, and the warmth of family and friends. May the divine light of Diwali bring peace and happiness to your life.`,
      `May the beautiful festival of Diwali fill ${req.body?.name || 'your'} home and heart with countless blessings, joy, and prosperity. Wishing you a sparkling and safe celebration!`,
      `As you celebrate the festival of lights, ${req.body?.name || 'you'}, may your life be filled with new hopes, opportunities, and success. Happy Diwali to you and your family!`
    ];
    
    const randomGreeting = fallbackGreetings[Math.floor(Math.random() * fallbackGreetings.length)];
    
    res.status(200).json({
      success: false,
      greeting: randomGreeting,
      note: 'This is a fallback greeting as the AI service is temporarily unavailable.'
    });
  }
}
